!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){const n=e=>t=>t.method.toLowerCase()===e.toLowerCase(),r=n("connect"),o=n("delete"),s=n("get"),a=n("head"),i=n("options"),u=n("patch"),c=n("post"),l=n("put"),d=n("trace"),h=e=>t=>{const n=new URL(t.url).pathname;return(n.match(e)||[])[0]===n};e.exports=class{constructor(){this.routes=[]}handle(e,t){return this.routes.push({conditions:e,handler:t}),this}connect(e,t){return this.handle([r,h(e)],t)}delete(e,t){return this.handle([o,h(e)],t)}get(e,t){return this.handle([s,h(e)],t)}head(e,t){return this.handle([a,h(e)],t)}options(e,t){return this.handle([i,h(e)],t)}patch(e,t){return this.handle([u,h(e)],t)}post(e,t){return this.handle([c,h(e)],t)}put(e,t){return this.handle([l,h(e)],t)}trace(e,t){return this.handle([d,h(e)],t)}all(e){return this.handle([],e)}route(e){const t=this.resolve(e);return t?t.handler(e):new Response("resource not found",{status:404,statusText:"not found",headers:{"content-type":"text/plain"}})}resolve(e){return this.routes.find(t=>!(t.conditions&&(!Array.isArray(t)||t.conditions.length))||("function"==typeof t.conditions?t.conditions(e):t.conditions.every(t=>t(e))))}}},function(e,t,n){"use strict";n.r(t);var r=n(0),o=n.n(r);const s=(e,t)=>new Response(JSON.stringify({data:e,message:t}),{headers:{"Content-type":"application/json",status:200}});var a=async e=>{try{const t=await e.text(),n=JSON.parse(t);console.log(t);const r=(e=>JSON.parse(e.messages[0].data))(n);if(console.log(r),n){const e=await(async e=>{try{console.log("trying?!");const{key:t,data:n}=e,r=`https://rest.ably.io/channels/cloudflare-bot/messages?envolped=false&key=${t}`,o=await fetch(`${r}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({data:n})});return console.log("Publishin",n),await o.json()}catch(e){return e}})({key:"1Mp0GA.sk52-w:0wBfApEvp7mnSI49",data:r});return s(e,"delivered")}return s(null,"Request Body cannot be empty!")}catch(e){return console.log(e),new Response(e,{status:500})}};addEventListener("fetch",e=>{e.respondWith(async function(e){const t=new o.a;return t.post("/ably",a),await t.route(e)}(e.request))})}]);